[{"/home/yourok/MEGAWork/Web/TorrServerWeb/src/index.js":"1","/home/yourok/MEGAWork/Web/TorrServerWeb/src/App.js":"2","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Appbar.js":"3","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Upload.js":"4","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/RemoveAll.js":"5","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/TorrentList.js":"6","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Add.js":"7","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Donate.js":"8","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Settings.js":"9","/home/yourok/MEGAWork/Web/TorrServerWeb/src/utils/Hosts.js":"10","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Torrent.js":"11","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/DialogCacheInfo.js":"12","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/DialogTorrentInfo.js":"13","/home/yourok/MEGAWork/Web/TorrServerWeb/src/utils/Utils.js":"14"},{"size":224,"mtime":1607328766846,"results":"15","hashOfConfig":"16"},{"size":840,"mtime":1607329513826,"results":"17","hashOfConfig":"16"},{"size":6484,"mtime":1607340369952,"results":"18","hashOfConfig":"16"},{"size":1348,"mtime":1607335733737,"results":"19","hashOfConfig":"16"},{"size":1416,"mtime":1607335705443,"results":"20","hashOfConfig":"16"},{"size":1568,"mtime":1607340137621,"results":"21","hashOfConfig":"16"},{"size":3345,"mtime":1607335694784,"results":"22","hashOfConfig":"16"},{"size":2793,"mtime":1607330316050,"results":"23","hashOfConfig":"16"},{"size":6841,"mtime":1607339567687,"results":"24","hashOfConfig":"16"},{"size":737,"mtime":1607427032081,"results":"25","hashOfConfig":"16"},{"size":6804,"mtime":1607427032081,"results":"26","hashOfConfig":"16"},{"size":3957,"mtime":1607431435970,"results":"27","hashOfConfig":"16"},{"size":4662,"mtime":1607431282868,"results":"28","hashOfConfig":"16"},{"size":428,"mtime":1607431364533,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"bgudbu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yourok/MEGAWork/Web/TorrServerWeb/src/index.js",[],["60","61"],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/App.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Appbar.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Upload.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/RemoveAll.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/TorrentList.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Add.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Donate.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Settings.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/utils/Hosts.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/Torrent.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/DialogCacheInfo.js",["62"],"import React, { useEffect, useRef } from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport { getPeerString, humanizeSize } from '../utils/Utils'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { cacheHost } from '../utils/Hosts'\n\nexport default function DialogCacheInfo(props) {\n    const [hash, setHash] = React.useState(props.hash)\n    const [cache, setCache] = React.useState({})\n    const timerID = useRef(-1)\n\n    useEffect(() => {\n        if (hash)\n            timerID.current = setInterval(() => {\n                getCache(hash, (cache) => {\n                    setCache(cache)\n                })\n            }, 1000)\n        else clearInterval(timerID.current)\n\n        return () => {\n            clearInterval(timerID.current)\n        }\n    }, [hash])\n\n    return (\n        <div>\n            <DialogTitle id=\"form-dialog-title\">\n                <Typography fullWidth>\n                    <b>Hash </b>\n                    {cache.Hash}\n                </Typography>\n                <Typography fullWidth>\n                    <b>Capacity </b>\n                    {humanizeSize(cache.Capacity)}\n                </Typography>\n                <Typography fullWidth>\n                    <b>Filled </b>\n                    {humanizeSize(cache.Filled)}\n                </Typography>\n                <Typography fullWidth>\n                    <b>Pieces length </b>\n                    {humanizeSize(cache.PiecesLength)}\n                </Typography>\n                <Typography fullWidth>\n                    <b>Pieces count </b>\n                    {cache.PiecesCount}\n                </Typography>\n                <Typography>\n                    <b>Peers: </b> {getPeerString(cache.Torrent)}\n                </Typography>\n                <Typography fullWidth>\n                    <b>Download speed </b>\n                    {cache.Torrent && cache.Torrent.download_speed ? humanizeSize(cache.Torrent.download_speed) + '/sec' : ''}\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <div className=\"cache\" dangerouslySetInnerHTML={{ __html: getCacheMap(cache) }} />\n            </DialogContent>\n        </div>\n    )\n}\n\nfunction getCacheMap(cache) {\n    if (!cache || !cache.PiecesCount) return ''\n    var html = ''\n    for (let i = 0; i < cache.PiecesCount; i++) {\n        html += \"<span class='piece\"\n        if (cache.Pieces && cache.Pieces[i]) {\n            let piece = cache.Pieces[i]\n            if (piece.ReaderType === 0) {\n                if (piece.Completed && piece.Size >= piece.Length) html += ' piece-complete'\n                else html += ' piece-loading'\n            } else {\n                if (piece.ReaderType === 1) html += ' piece-player'\n                else if (piece.ReaderType === 2) html += ' piece-buffering'\n            }\n        }\n        html += \"' title='\" + i + \"'></span>\"\n    }\n    return html\n}\n\nfunction getCache(hash, callback) {\n    try {\n        fetch(cacheHost(), {\n            method: 'post',\n            body: JSON.stringify({ action: 'get', hash: hash }),\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((res) => res.json())\n            .then(\n                (json) => {\n                    callback(json)\n                },\n                (error) => {\n                    callback({})\n                    console.error(error)\n                }\n            )\n    } catch (e) {\n        console.error(e)\n        callback({})\n    }\n}\n/*\n{\n\t\"Hash\": \"41e36c8de915d80db83fc134bee4e7e2d292657e\",\n\t\"Capacity\": 209715200,\n\t\"Filled\": 2914808,\n\t\"PiecesLength\": 4194304,\n\t\"PiecesCount\": 2065,\n\t\"DownloadSpeed\": 32770.860273455524,\n\t\"Pieces\": {\n\t\t\"2064\": {\n\t\t\t\"Id\": 2064,\n\t\t\t\"Length\": 2914808,\n\t\t\t\"Size\": 162296,\n\t\t\t\"Completed\": false\n\t\t}\n\t}\n}\n */\n","/home/yourok/MEGAWork/Web/TorrServerWeb/src/components/DialogTorrentInfo.js",[],"/home/yourok/MEGAWork/Web/TorrServerWeb/src/utils/Utils.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":10,"column":18,"nodeType":"69","messageId":"70","endLine":10,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'setHash' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]