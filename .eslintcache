[{"/space/Projects/Web/TorrServerWeb/src/index.js":"1","/space/Projects/Web/TorrServerWeb/src/reportWebVitals.js":"2","/space/Projects/Web/TorrServerWeb/src/App.js":"3","/space/Projects/Web/TorrServerWeb/src/components/Appbar.js":"4","/space/Projects/Web/TorrServerWeb/src/components/Add.js":"5","/space/Projects/Web/TorrServerWeb/src/components/TorrentList.js":"6","/space/Projects/Web/TorrServerWeb/src/components/Torrent.js":"7","/space/Projects/Web/TorrServerWeb/src/components/Upload.js":"8","/space/Projects/Web/TorrServerWeb/src/components/RemoveAll.js":"9","/space/Projects/Web/TorrServerWeb/src/components/Settings.js":"10"},{"size":511,"mtime":1606923295815,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606923295815,"results":"13","hashOfConfig":"12"},{"size":288,"mtime":1606924291484,"results":"14","hashOfConfig":"12"},{"size":5695,"mtime":1606938252053,"results":"15","hashOfConfig":"12"},{"size":3195,"mtime":1606938233905,"results":"16","hashOfConfig":"12"},{"size":1496,"mtime":1606938233449,"results":"17","hashOfConfig":"12"},{"size":2995,"mtime":1606938233617,"results":"18","hashOfConfig":"12"},{"size":1309,"mtime":1606933460571,"results":"19","hashOfConfig":"12"},{"size":1214,"mtime":1606938233757,"results":"20","hashOfConfig":"12"},{"size":6846,"mtime":1606938188569,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ppqu83",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/space/Projects/Web/TorrServerWeb/src/index.js",[],["47","48"],"/space/Projects/Web/TorrServerWeb/src/reportWebVitals.js",[],"/space/Projects/Web/TorrServerWeb/src/App.js",[],"/space/Projects/Web/TorrServerWeb/src/components/Appbar.js",["49","50","51","52","53"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\n\nimport TorrentList from \"./TorrentList\";\nimport { Box } from \"@material-ui/core\";\n\nimport AddDialog from \"./Add\";\nimport UploadDialog from \"./Upload\";\nimport RemoveAll from \"./RemoveAll\";\nimport SettingsDialog from \"./Settings\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            TorrServer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <AddDialog />\n          {/*<UploadDialog />*/}\n          <RemoveAll />\n        </List>\n        <Divider />\n        <List>\n          <ListItem\n            button\n            key=\"Playlist all torrents\"\n            onClick={() =>\n              window.open(\n                /*\"http://127.0.0.1:8090\" +*/ \"/playlistall/all.m3u\",\n                \"_blank\"\n              )\n            }\n          >\n            <ListItemIcon>\n              <ListIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Playlist all torrents\" />\n          </ListItem>\n          <SettingsDialog />\n          <ListItem\n            button\n            key=\"Close server\"\n            onClick={() => fetch(/*\"http://127.0.0.1:8090\" +*/ \"/shutdown\")}\n          >\n            <ListItemIcon>\n              <PowerSettingsNewIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Close server\" />\n          </ListItem>\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <Box m=\"5em\" />\n        <TorrentList />\n      </main>\n    </div>\n  );\n}\n","/space/Projects/Web/TorrServerWeb/src/components/Add.js",[],"/space/Projects/Web/TorrServerWeb/src/components/TorrentList.js",[],"/space/Projects/Web/TorrServerWeb/src/components/Torrent.js",[],["54","55"],"/space/Projects/Web/TorrServerWeb/src/components/Upload.js",["56","57","58","59","60","61","62","63"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function UploadDialog() {\n  const classes = useStyles();\n  return (\n    <div>\n      <input type=\"file\" className={classes.input} id=\"filesUpload\" multiple />\n      <label htmlFor=\"filesUpload\">\n        <ListItem button type=\"submit\" component=\"button\" key=\"Upload file\">\n          <ListItemIcon>\n            <PublishIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Upload file\" />\n        </ListItem>\n      </label>\n    </div>\n  );\n}\n","/space/Projects/Web/TorrServerWeb/src/components/RemoveAll.js",[],"/space/Projects/Web/TorrServerWeb/src/components/Settings.js",["64"],"import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useEffect } from \"react\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\n\nexport default function SettingsDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [settings, setSets] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCloseSave = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fetch(/*\"http://127.0.0.1:8090\" +*/ \"/settings\", {\n      method: \"post\",\n      body: JSON.stringify({ action: \"get\" }),\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (json) => {\n          setSets(json);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n\n  const inputForm = (event) => {\n    settings[event.target.name] = event.target.value;\n  };\n\n  return (\n    <div>\n      <ListItem button key=\"Settings\" onClick={handleClickOpen}>\n        <ListItemIcon>\n          <SettingsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Settings\" />\n      </ListItem>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">Settings</DialogTitle>\n        <DialogContent>\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"CacheSize\"\n            label=\"CacheSize\"\n            value={settings.CacheSize}\n            type=\"number\"\n            fullWidth\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"PreloadBufferSize\"\n            label=\"PreloadBufferSize\"\n            value={settings.PreloadBufferSize}\n            type=\"number\"\n            fullWidth\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"RetrackersMode\"\n            label=\"RetrackersMode\"\n            value={settings.RetrackersMode}\n            type=\"text\"\n            fullWidth\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"TorrentDisconnectTimeout\"\n            label=\"TorrentDisconnectTimeout\"\n            value={settings.TorrentDisconnectTimeout}\n            type=\"text\"\n            fullWidth\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={settings.EnableIPv6}\n                onChange={inputForm}\n                name=\"EnableIPv6\"\n                color=\"primary\"\n              />\n            }\n            label=\"EnableIPv6\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={settings.DisableTCP}\n                onChange={inputForm}\n                name=\"DisableTCP\"\n                color=\"primary\"\n              />\n            }\n            label=\"DisableTCP\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={settings.DisableUTP}\n                onChange={inputForm}\n                name=\"DisableUTP\"\n                color=\"primary\"\n              />\n            }\n            label=\"DisableUTP\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={settings.DisableUPNP}\n                onChange={inputForm}\n                name=\"DisableUPNP\"\n                color=\"primary\"\n              />\n            }\n            label=\"DisableUPNP\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={settings.DisableDHT}\n                onChange={inputForm}\n                name=\"DisableDHT\"\n                color=\"primary\"\n              />\n            }\n            label=\"DisableDHT\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={settings.DisableUpload}\n                onChange={inputForm}\n                name=\"DisableUpload\"\n                color=\"primary\"\n              />\n            }\n            label=\"DisableUpload\"\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"DownloadRateLimit\"\n            label=\"DownloadRateLimit\"\n            value={settings.DownloadRateLimit}\n            type=\"number\"\n            fullWidth\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"UploadRateLimit\"\n            label=\"UploadRateLimit\"\n            value={settings.UploadRateLimit}\n            type=\"number\"\n            fullWidth\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"ConnectionsLimit\"\n            label=\"ConnectionsLimit\"\n            value={settings.ConnectionsLimit}\n            type=\"number\"\n            fullWidth\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"DhtConnectionLimit\"\n            label=\"DhtConnectionLimit\"\n            value={settings.DhtConnectionLimit}\n            type=\"number\"\n            fullWidth\n          />\n          <TextField\n            onChange={inputForm}\n            margin=\"dense\"\n            id=\"PeersListenPort\"\n            label=\"PeersListenPort\"\n            value={settings.PeersListenPort}\n            type=\"number\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseSave} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n/*\n{\n\t\"CacheSize\": 209715200,\n\t\"PreloadBufferSize\": 20971520,\n\t\"RetrackersMode\": 1,\n\t\"TorrentDisconnectTimeout\": 30,\n\t\"EnableIPv6\": false,\n\t\"DisableTCP\": false,\n\t\"DisableUTP\": true,\n\t\"DisableUPNP\": false,\n\t\"DisableDHT\": false,\n\t\"DisableUpload\": false,\n\t\"DownloadRateLimit\": 0,\n\t\"UploadRateLimit\": 0,\n\t\"ConnectionsLimit\": 20,\n\t\"DhtConnectionLimit\": 500,\n\t\"PeersListenPort\": 0\n}\n */\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":19,"column":8,"nodeType":"71","messageId":"72","endLine":19,"endColumn":22},{"ruleId":"69","severity":1,"message":"73","line":20,"column":8,"nodeType":"71","messageId":"72","endLine":20,"endColumn":19},{"ruleId":"69","severity":1,"message":"74","line":21,"column":8,"nodeType":"71","messageId":"72","endLine":21,"endColumn":18},{"ruleId":"69","severity":1,"message":"75","line":23,"column":8,"nodeType":"71","messageId":"72","endLine":23,"endColumn":20},{"ruleId":"69","severity":1,"message":"76","line":30,"column":8,"nodeType":"71","messageId":"72","endLine":30,"endColumn":20},{"ruleId":"65","replacedBy":"77"},{"ruleId":"67","replacedBy":"78"},{"ruleId":"69","severity":1,"message":"79","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"80","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":17},{"ruleId":"69","severity":1,"message":"81","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":14},{"ruleId":"69","severity":1,"message":"82","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":21},{"ruleId":"69","severity":1,"message":"83","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":21},{"ruleId":"69","severity":1,"message":"84","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":25},{"ruleId":"69","severity":1,"message":"85","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":10,"column":8,"nodeType":"71","messageId":"72","endLine":10,"endColumn":22},{"ruleId":"69","severity":1,"message":"84","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":25},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'LibraryAddIcon' is defined but never used.","Identifier","unusedVar","'PublishIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'UploadDialog' is defined but never used.",["86"],["87"],"'Button' is defined but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","no-global-assign","no-unsafe-negation"]